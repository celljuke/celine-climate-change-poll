// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Survey {
  id          String    @id @default(cuid())
  title       String
  description String?
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
  isActive    Boolean   @default(true)
  questions   Question[]
  responses   Response[]
}

model Question {
  id          String    @id @default(cuid())
  surveyId    String
  survey      Survey    @relation(fields: [surveyId], references: [id], onDelete: Cascade)
  text        String
  type        QuestionType
  required    Boolean   @default(true)
  order       Int
  options     Option[]
  answers     Answer[]
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
}

enum QuestionType {
  MULTIPLE_CHOICE
  SINGLE_CHOICE
  TEXT
  RATING
}

model Option {
  id          String    @id @default(cuid())
  questionId  String
  question    Question  @relation(fields: [questionId], references: [id], onDelete: Cascade)
  text        String
  order       Int
  answers     Answer[]
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
}

model Response {
  id          String    @id @default(cuid())
  surveyId    String
  survey      Survey    @relation(fields: [surveyId], references: [id], onDelete: Cascade)
  answers     Answer[]
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
}

model Answer {
  id          String    @id @default(cuid())
  responseId  String
  response    Response  @relation(fields: [responseId], references: [id], onDelete: Cascade)
  questionId  String
  question    Question  @relation(fields: [questionId], references: [id], onDelete: Cascade)
  optionId    String?
  option      Option?   @relation(fields: [optionId], references: [id])
  textAnswer  String?
  ratingValue Int?
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
} 