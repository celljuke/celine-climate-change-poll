// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Survey {
  id            String    @id @default(cuid())
  titleI18n     Json      // {"en": "English Title", "tr": "Turkish Title"}
  descriptionI18n Json?   // {"en": "English Description", "tr": "Turkish Description"}
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
  isActive      Boolean   @default(true)
  questions     Question[]
  responses     Response[]
}

model Question {
  id            String    @id @default(cuid())
  surveyId      String
  survey        Survey    @relation(fields: [surveyId], references: [id], onDelete: Cascade)
  textI18n      Json      // {"en": "English Question", "tr": "Turkish Question"}
  type          QuestionType
  required      Boolean   @default(true)
  order         Int
  options       Option[]
  answers       Answer[]
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
}

enum QuestionType {
  MULTIPLE_CHOICE
  SINGLE_CHOICE
  RATING
}

model Option {
  id            String    @id @default(cuid())
  questionId    String
  question      Question  @relation(fields: [questionId], references: [id], onDelete: Cascade)
  textI18n      Json      // {"en": "English Option", "tr": "Turkish Option"}
  order         Int
  answers       Answer[]
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
}

model Response {
  id          String    @id @default(cuid())
  surveyId    String
  survey      Survey    @relation(fields: [surveyId], references: [id], onDelete: Cascade)
  answers     Answer[]
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
}

model Answer {
  id          String    @id @default(cuid())
  responseId  String
  response    Response  @relation(fields: [responseId], references: [id], onDelete: Cascade)
  questionId  String
  question    Question  @relation(fields: [questionId], references: [id], onDelete: Cascade)
  optionId    String?
  option      Option?   @relation(fields: [optionId], references: [id])
  ratingValue Int?
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
} 